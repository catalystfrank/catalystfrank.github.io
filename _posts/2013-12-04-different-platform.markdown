---
title: SAS性能评估
layout: post
guid: urn:uuid:b87da13a-a4dd-402f-b06a-cef7eeee2d84
tags:
  - 工作
  - 数据挖掘
  - 数据库
---

今天部门要采购SAS，就SAS使用方法，经验展开讨论，整理出SAS平台采购及使用中核心的关注点如下：

### SAS分析平台产品群与SPSS,R,Python各方面性能，特性比较

* SAS的基础探索及模型Base可以实现，数学模型在Enterprise Miner(EM)中，项目管理通过Enterprise Guide(EG)，可视化有Visual Analytics(VA)；
* SPSS的数据探索和简单模型Statistics可以实现，数学模型在Modeler中（曾用名Clementine），项目过程流使用Modeler；
* R和Python自有环境通过加载包实现上述各种功能，项目过程可控性及管理性几乎为0。

一 功能性  |\|    |\|    |\|    |\|  
工具  |\|  SAS  |\|  SPSS  |\|  R  |\|  Python
前沿SciComp  |\|  中  |\|  中  |\|  强  |\|  强
分析,DMML  |\|  BASE实现大部分  |\|  必须Modeler  |\|  有  |\|  有
结构化数据  |\|  极强，自有语言整合  |\|  强  |\|  强  |\|  弱
非结构化数据  |\|  弱  |\|  弱  |\|  中等  |\|  强
商用数据库接口  |\|  强  |\|  强  |\|  中等  |\|  中等
实施难易度  |\|  中，库外  |\|  易，库内  |\|  中，依赖平台  |\|  中等，库外
项目管理  |\|  EG  |\|  Modeler  |\|  无  |\|  无
图形可视化  |\|  Base较差，VA极贵  |\|  中等~较差  |\|  中等~较好  |\|  中等
  |\|    |\|    |\|    |\|  
二 效率  |\|    |\|    |\|    |\|  
工具  |\|  SAS  |\|  SPSS  |\|  R  |\|  Python
大数据ETL  |\|  快  |\|  中  |\|  较慢  |\|  快
中间步存储  |\|  自有格式  |\|  内存  |\|  内存  |\|  内存
集群计算  |\|  SAS-GRID服务，平台  |\|  数据库  |\|  平台  |\|  平台
GPU方案  |\|  无  |\|  无  |\|  有  |\|  有
  |\|    |\|    |\|    |\|  
三 开发性  |\|    |\|    |\|    |\|  
工具  |\|  SAS  |\|  SPSS  |\|  R  |\|  Python
开发周期  |\|  中长  |\|  中  |\|  极短  |\|  短
学习难度  |\|  自有，高  |\|  自有，高  |\|  脚本，低  |\|  脚本，低
GUI方案  |\|  EG，较易  |\|  Modeler，较易  |\|  无  |\|  无
培训成本  |\|  钱+较多时间  |\|  较多时间  |\|  较少时间  |\|  很少时间

###SAS日常的工作流程

* a 根据业务需求，提出分析的小专题；如果有EG，建好分析过程流控制加工过程，由单次分析的Leader负责元数据和所有团队成员的代码汇总。
* b 将基础层明细/汇总层/集市层数据通过ODBC连接提取所需分析数据到库外，如果数据质量高可以直接分析，否则进行针对分析主题的数据清洗操作；这一步可以和数据探索，变量分析同时进行。统一保留一份核心代码作为清洗代码+变量探索代码，把得到的结果固化为ETL文件夹。所有人共享。
* c SAS自有数据库支持表级手动压缩，自动索引，属于硬盘型行式数据库。通过自有语言及标准SQL进行适合分析的硬盘式分析数据库的设计，把得到的结果作为SUM文件夹固化。所有人共享。
* d 针对分析中的每一次尝试，每一个人需要有一个自己的分析ANA文件夹，同时需记录自己工作中核心的SAS BASE代码，以及可能产生的EM代码
* e 整合分析结果，经过讨论，留下一份价值高，分析全的分析ANA文件夹，作为下一步工作的共享资源使用。
* f 落地实施：如果实施负载极大，应该将EM中间的代码逻辑整理一份SQL或者C++ 版本迁移到数据库。这方面可以阅读代码后进行独立在数据库上的开发，也能使用SAS EM自己提供的接口。
* g 结果展示SAS制图：可以选择使用SAS自带比较简单的制图，但是定制的制图开发难度大，颜色定制也不专业。 建议将凝结出核心价值的分析结果迁移到适合展示的平台上（入库+MSTR以及R+ggplot2是大数据和轻量数据展示两个极好的方案，js+php暂时无需求）

###SAS或者适合的应用场景

* 适合应用场景：结构化汇总表数据分析，千万级记录，压缩前单表10GB数据表是单节点SAS能够较好处理复杂数据的上限（包括复杂SQL使用），不复杂数据可以使用上亿数据，跟关联有关的操作需要考察内存性能，其他操作只考察磁盘IO性能即可。
* 行式数据库，列数过多将较大影响SAS数据操作的性能，不建议超过200列。

###团队及人员建设要求

* SQL经验是SAS的基础，以及最简单易行的切入SAS的方式。
* 通过可落地的SQL操作，逐步转移成为更高效的SAS代码操作，是IT人员比较基础的学习方式（熟悉PROC SQL以及DATA步）。
* 通过SQL操作+SAS帮助，实现传统的数据分析，数据挖掘算法，是偏分析人员的工作重点（重在理解SAS提供的功能繁多的PROC步）
* 在SAS中比较高级的应用，比如SAS Macro以及矩阵直接计算操作需要SAS提供周期性的人员培训。

###性能实际比较数据

产品  |\|  SAS  |\|  R
数据加载  |\|  10~30秒  |\|  10分钟
单变量数据探索/清洗  |\|  10~30秒  |\|  2~10秒
及时性全量数据内容展示  |\|  1秒  |\|  仅展示有限行，10秒
抽样数据图形化展示  |\|  30秒（瓶颈在磁盘IO）  |\|  30秒（瓶颈在CPU及内存）
多列数据计算  |\|  20秒以内  |\|  10秒以内
矩阵计算以及数据挖掘  |\|  30秒以内  |\|  10秒以内